############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. This file will not be erased
# when updating the config using moonraker and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...
# The corresponding documentation can be found in: docs > overrides.md

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double MCU configuration)
#> Toolhead CANboard MCUs are called "toolhead"
#> MMU/ERCF MCUs are called "mmu" 

# ------------------------------------------------------------------------------------------


#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
[gcode_macro _USER_VARIABLES]
variable_startprint_actions: "bed_soak", "extruder_preheating", "chamber_soak", "tilt_calib", "bedmesh", "clean", "auto_probe", "extruder_heating", "purge", "clean", "primeline"
# variable_startprint_actions: "bed_soak", "extruder_preheating", "chamber_soak", "tilt_calib", "extruder_heating", "purge", "clean", "z_offset", "bedmesh", "primeline"
gcode: # do not remove this line


#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

## Here is an example of some overrides for the PIDs. I put them here as almost everyone will use them,
## so just uncomment the following lines and change the values according to your own machine
[extruder]
max_temp: 305
control: pid
pid_Kp=32.627
pid_Ki=3.750
pid_Kd=70.964


[heater_bed]
control: pid
pid_Kp=64.710
pid_Ki=2.783
pid_Kd=376.129

# Extruder sensor type
#[extruder]
# sensor_type: ATC Semitec 104NT-4-R025H42G
# new_rd = previous_rd * mesured_distance / requested_distance
#rotation_distance: 3.99
#run_current: 0.6

# Chamber sensor
[temperature_sensor Chamber]
sensor_type: NTC 100K MGB18-104F39050L32

#-------------------------#
#   X Sensorless homing   #
#-------------------------#
[stepper_x]
#homing_speed: 25
# endstop_pin: toolhead:X_STOP
#endstop_pin: tmc2240_stepper_x:virtual_endstop

#-------------------------#
#   Y Sensorless homing   #
#-------------------------#

# This is to allow for the additional thickness of the titanium backer triggering the endstop earlier
[stepper_y]
#endstop_pin: tmc2240_stepper_y:virtual_endstop
#homing_speed: 25
position_min: 0
position_endstop: 304
position_max: 304

#-------------------------#
#   Z MOTORS DIRECTION    #
#-------------------------#

## Here is an example of some overrides for the motor directions as it's a pretty common one. If you need
## to invert the Z1 or Z3 motor direction on your machine, just uncomment the following lines.
[stepper_z1]
dir_pin: !Z1_DIR

[stepper_z3]
dir_pin: !Z3_DIR

#-------------------------#
#   Z stepper cooler      #
#-------------------------#
[controller_fan TMCDriver_fan]
pin: HOST_CONTROLLER_FAN
stepper: stepper_x, stepper_y, stepper_z
fan_speed: 0.6
kick_start_time: 0.5
off_below: 0.4
idle_speed: 0.4
idle_timeout: 20

#-------------------------#
#   Probe Offsets         #
#-------------------------#

## Here is an example of some overrides for bed probes. These frequently have calibrated offsets for xyz,
## and many will need them during setup. If you need to set these, just uncomment the following lines.
# [probe]
# x_offset: -1.85
# y_offset: 29.3
# z_offset: 12.6

# Z Stepper overrides for Cartographer
[stepper_z]
endstop_pin: probe:z_virtual_endstop # use cartographer as virtual endstop
homing_retract_dist: 0 # cartographer needs this to be set to 0

# Custom Bed Mesh settings
[bed_mesh]
speed: 350
horizontal_move_z: 20
mesh_min: 25, 25
mesh_max: 275, 275
probe_count: 40, 40
fade_start: 0.6
fade_end: 10.0
algorithm: bicubic
zero_reference_position: 150, 150


# Axes map
[adxl345]
axes_map: z,-y,x

# Input shaping
[input_shaper]
shaper_freq_x: 55.8 # center frequency for the X axis filter
shaper_type_x: mzv # filter type for the X axis
shaper_freq_y: 41.0 # center frequency for the Y axis filter
shaper_type_y: mzv # filter type for the Y axis
damping_ratio_x: 0.040 # damping ratio for the X axis
damping_ratio_y: 0.049 # damping ratio for the Y axis

# TMC Autotune settings
[tmc2240 stepper_x]
hold_current: 0.4
#diag0_pin: ^!MCU_STOP0
driver_SGT: 2

[tmc2240 stepper_y]
hold_current: 0.4
#diag0_pin: ^!MCU_STOP1
driver_SGT: 2

[tmc2209 stepper_z]
hold_current: 0.4

[tmc2209 stepper_z1]
hold_current: 0.4

[tmc2209 stepper_z2]
hold_current: 0.4

[tmc2209 stepper_z3]
hold_current: 0.4

[tmc2209 extruder]
#hold_current: 0.25
run_current: 0.6

[autotune_tmc stepper_x]
motor: omc-17hm19-2004s
[autotune_tmc stepper_y]
motor: omc-17hm19-2004s

[autotune_tmc stepper_z]
motor: omc-17hm19-2004s
[autotune_tmc stepper_z1]
motor: omc-17hm19-2004s
[autotune_tmc stepper_z2]
motor: omc-17hm19-2004s
[autotune_tmc stepper_z3]
motor: omc-17hm19-2004s

## Commented out as changed to Bondtech LGX lite Pro
#[autotune_tmc extruder]
#motor: ldo-36sth20-1004ahg

# Controller fan overrides
[controller_fan controller_fan]
fan_speed: 0.6


# Add custom macros
[include macro_overrides.cfg]