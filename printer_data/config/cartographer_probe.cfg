## Config for the Cartographer eddy probe

[mcu scanner]
canbus_uuid: c2ce51c3d9be
#serial: /dev/serial/by-id/usb-cartographer_cartographer_
#    adjust to suit your scanner, if using usb change to serial

[scanner]
mcu: scanner            
#   Offsets are measured from the centre of your coil, to the tip of your nozzle 
#   on a level axis. It is vital that this is accurate. 
x_offset: 0                          
#    adjust for your cartographers offset from nozzle to middle of coil
y_offset: 15                         
#    adjust for your cartographers offset from nozzle to middle of coil
backlash_comp: 0.00634
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
sensor: cartographer
#    this must be set as cartographer unless using IDM etc.
sensor_alt: carto
#    alternate name to call commands. CARTO_TOUCH etc      
mesh_runs: 2
#    Number of passes to make during mesh scan.

# [bed mesh] is defined in overrides.cfg

[temperature_sensor Cartographer_MCU]
sensor_type: temperature_mcu
sensor_mcu: scanner
min_temp: 0
max_temp: 105

#[safe_z_home]
#home_xy_position: 150,150
# Example home_xy_position: 175,175 - This would be for a 350 * 350mm bed. 
#z_hop: 10

[gcode_macro _USER_VARIABLES]
# We can declare an "inductive_virtual" probe type as it's pretty close to the Beacon way of working and should just work!
variable_probe_type_enabled: "inductive_virtual"
# variable_startprint_actions: "bed_soak", "extruder_preheating", "chamber_soak", "tilt_calib", "extruder_heating", "purge", "clean", "z_offset", "bedmesh", "primeline"
gcode:

[gcode_macro RANDOM_CENTER_TAP_POSITION]
gcode: 
  {% set x_min = printer["toolhead"].axis_minimum.x %}
  {% set x_max = printer["toolhead"].axis_maximum.x %}
  {% set y_min = printer["toolhead"].axis_minimum.y %}
  {% set y_max = printer["toolhead"].axis_maximum.y %}
  {% set midpoint_x = (x_min + x_max) / 2 %}
  {% set midpoint_y = (y_min + y_max) / 2 %}
  {% set random_number = (range(-10, 10) | random) %}
  {% set X = (midpoint_x + random_number)|int %}
  {% set Y = (midpoint_y + random_number)|int %}
  G0 X{X} Y{Y}

[gcode_macro _MODULE_SCANNER_PROBE]
# This macro implements the Cartographer auto Z feature
# We do a quick retract first to prevent ooze
gcode:
  M83 ; set to relative
  G1 E-3 F900 ; retract 3mm at 15mm/sec
  G1 Z20
  M82 ; back to absolute mode
  CARTOGRAPHER_TOUCH

# Beacon probe definition also include the probe management macro directly from here
[include macros/base/probing/generic_probe.cfg]
